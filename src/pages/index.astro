---
import { getCollection } from "astro:content";
import Center from "../components/Center.astro";
import BaseLayout from "../layouts/BaseLayout.astro";
import HomeCategoryView from "src/components/HomeCategoryView.astro";
import { Image } from "astro:assets";
import homeImage from "../assets/images/criv-opening-2.gif";
const homeCategories = await getCollection("homeCategories");


---

<BaseLayout
  title="Centro di Ricerca Interdisciplinare sulla Voce (CRIV)"
  description="Centro di Ricerca Interdisciplinare sulla Voce (CRIV)"
  includeFooter
>
  <Center>
    <section class="home">
      <h1 class="visuallyhidden">Centro di Ricerca Interdisciplinare sulla Voce (CRIV)</h1>
      <div class="intro">
        <p>
          Description with links to
          <strong><a href="/concerts" class="inline-link">Concerts</a></strong>, 
          <strong><a href="/research" class="inline-link">Research</a></strong> and
          <strong><a href="/education" class="inline-link">Education</a></strong> pages
          and more text
        </p>
      </div>
      <div class="synth">
        <img src={homeImage.src} width={homeImage.width} height={homeImage.height} alt="Home Image for CRIV"/>
      </div>
      <div class="continue">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 24 24"
          width="40px"
          fill="currentColor"
          ><path
            d="M11.9999 13.1714L16.9497 8.22168L18.3639 9.63589L11.9999 15.9999L5.63599 9.63589L7.0502 8.22168L11.9999 13.1714Z"
          ></path></svg
        >
      </div>
    </section>
    <section class="work">
      {homeCategories.map((category: any) => <HomeCategoryView project={category} />)}
    </section>
   
    
  </Center>
</BaseLayout>



<style lang="scss">
  .visuallyhidden {
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    height: 1px;
    overflow: hidden;
    position: absolute;
    white-space: nowrap;
    width: 1px;
  }

  .home {
    display: flex;
    flex-direction: column;
    gap: var(--space-3xl);
    min-height: calc(100svh - var(--space-3xl) * 1.8);
  }

  .continue {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: auto;
    color: var(--gray-10);

    @supports (animation-timeline: view()) {
      animation-name: fadeOut;
      animation-timing-function: linear;
      animation-fill-mode: both;
      animation-timeline: view();
      animation-range: contain 50% contain 80%;
    }
  }

  @keyframes rotate {
    0% {
      transform: rotate(0deg);
    }

    100% {
      transform: rotate(360deg);
    }
  }

  .work {
    padding-block: var(--space-3xl) var(--space-xl);
  }

  .intro {
    padding-block-start: var(--space-2xl);
    text-wrap: balance;
    user-select: none;

    p {
      font-size: var(--step-4);
      letter-spacing: var(--letter-spacing-condensed);
      line-height: var(--line-height-tight);
    }
  }

  

 
  
  section {
    display: flex;
    flex-direction: column;
    gap: var(--space-l);
    margin-bottom: 1rem;
    & + section {
      margin-block-start: var(--space-3xl);
    }
  }

  .synth {
    display: flex;
    align-items: center;
    justify-content: center;

    @media (width > 640px) {
      background: var(--gray-3);
      border-radius: var(--radius-m);
      
    }
  }
</style>
